# THIS CODE WAS AUTOGENERATED. DO NOT MODIFY THIS FILE DIRECTLY
# THE SOURCE CODE LIVES IN A DIFFERENT REPOSITORY:
#   - centralized-templates
# FILE STEWARD: @pleo-io/team-devx,@pleo-bot-auto-approver


## This workflow responsibility is to trigger reusable service-cicd workflow with additional inputs if needed
name: CI/CD starter workflow for Kotlin backend services

on:
  # Allow manual triggering of the workflow
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  # Run this workflow in the merge queue to pass mandatory jobs
  merge_group:
    types: [checks_requested]

# Concurrency settings to prevent multiple runs on the same branch
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  # On a feature branch, if a new commit is pushed while a workflow is already running,
  # the running workflow is cancelled and a new one is triggered.
  # This is done to save CI resources and run a workflow against new changes.
  # However, on the default branch, running workflows will not be canceled when new commits are pushed or PRs merged.
  # This is to prevent potential corruption of release artifacts or deployments.
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  service-cicd:
    name: Service CI/CD
    uses: pleo-io/reusable-workflows/.github/workflows/service-kotlin-orchestrator.reusable-external.yaml@11f76ec5ffdd6fde3b7baf2453fd23d34e888f9b # v9.4.3
    secrets: inherit
    with:
      jdkVersion: 21
      funcTestEnabled: true
      functionalTestTimeOut: 20
      ignoreOpenAPIErrors: false
      releaseOpenAPIClients: true
      publishNodeOpenAPIClient: false
      publishTypeScriptFrontendModels: false
      deploymentEnabled: true
      environmentTenant: product
      generateChangelogUpdate: true
      slackChannelToNotifyWhenCicdFailureOnDefaultBranch: oncall-team-devx-new
